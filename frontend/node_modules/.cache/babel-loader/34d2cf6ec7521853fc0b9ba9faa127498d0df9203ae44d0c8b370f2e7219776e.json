{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\cyberha\\\\frontend\\\\src\\\\components\\\\AttackPhase.js\",\n  _s = $RefreshSig$();\n// src/components/AttackPhase.js\nimport React, { useState, useEffect } from 'react';\nimport './AttackPhase.css';\nimport { fetchRandomEventCard } from '../services/eventCardService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttackPhase = ({\n  selectedSector,\n  diceValue,\n  shieldValue,\n  onAttackResult,\n  onRequestRollDice,\n  isSpecialShield\n}) => {\n  _s();\n  const [attackState, setAttackState] = useState('initial');\n  const [eventCard, setEventCard] = useState(null);\n  const [showEventCard, setShowEventCard] = useState(true);\n  const handleAttack = () => {\n    setAttackState('rolling');\n    onRequestRollDice();\n  };\n  useEffect(() => {\n    const fetchEventCard = async () => {\n      if (isSpecialShield && diceValue >= shieldValue) {\n        const card = await fetchRandomEventCard();\n        setEventCard(card);\n        setShowEventCard(true);\n      }\n    };\n    fetchEventCard();\n  }, [diceValue, shieldValue, isSpecialShield]);\n  const renderAttackResult = () => {\n    if (!diceValue) return null;\n    const isSuccess = diceValue >= shieldValue;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `attack-result ${isSuccess ? 'success' : 'failure'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: isSuccess ? 'Attaque réussie!' : 'Attaque échouée!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Valeur du d\\xE9: \", diceValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Valeur du bouclier: \", shieldValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), isSuccess && isSpecialShield && eventCard && showEventCard && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-event\",\n          onClick: () => setShowEventCard(false),\n          \"aria-label\": \"Fermer\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://127.0.0.1:8000${eventCard.imageUrl}`,\n          alt: eventCard.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: eventCard.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onAttackResult(isSuccess),\n        className: \"confirm-btn\",\n        children: \"Continuer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attack-phase\",\n    children: [attackState === 'initial' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attack-prompt\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Phase d'attaque\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Secteur s\\xE9lectionn\\xE9: \", selectedSector + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAttack,\n        className: \"attack-btn\",\n        children: \"Lancer le d\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), attackState === 'rolling' && renderAttackResult()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AttackPhase, \"X2zKc8WSUTTsnjCFlC7SDBS4Id4=\");\n_c = AttackPhase;\nexport default AttackPhase;\nvar _c;\n$RefreshReg$(_c, \"AttackPhase\");","map":{"version":3,"names":["React","useState","useEffect","fetchRandomEventCard","jsxDEV","_jsxDEV","AttackPhase","selectedSector","diceValue","shieldValue","onAttackResult","onRequestRollDice","isSpecialShield","_s","attackState","setAttackState","eventCard","setEventCard","showEventCard","setShowEventCard","handleAttack","fetchEventCard","card","renderAttackResult","isSuccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","imageUrl","alt","name","description","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/cyberha/frontend/src/components/AttackPhase.js"],"sourcesContent":["// src/components/AttackPhase.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './AttackPhase.css';\r\nimport { fetchRandomEventCard } from '../services/eventCardService';\r\n\r\nconst AttackPhase = ({\r\n  selectedSector,\r\n  diceValue,\r\n  shieldValue,\r\n  onAttackResult,\r\n  onRequestRollDice,\r\n  isSpecialShield\r\n}) => {\r\n  const [attackState, setAttackState] = useState('initial');\r\n  const [eventCard, setEventCard] = useState(null);\r\n  const [showEventCard, setShowEventCard] = useState(true);\r\n\r\n  const handleAttack = () => {\r\n    setAttackState('rolling');\r\n    onRequestRollDice();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchEventCard = async () => {\r\n      if (isSpecialShield && diceValue >= shieldValue) {\r\n        const card = await fetchRandomEventCard();\r\n        setEventCard(card);\r\n        setShowEventCard(true);\r\n      }\r\n    };\r\n\r\n    fetchEventCard();\r\n  }, [diceValue, shieldValue, isSpecialShield]);\r\n\r\n  const renderAttackResult = () => {\r\n    if (!diceValue) return null;\r\n\r\n    const isSuccess = diceValue >= shieldValue;\r\n    return (\r\n      <div className={`attack-result ${isSuccess ? 'success' : 'failure'}`}>\r\n        <h3>{isSuccess ? 'Attaque réussie!' : 'Attaque échouée!'}</h3>\r\n        <p>Valeur du dé: {diceValue}</p>\r\n        <p>Valeur du bouclier: {shieldValue}</p>\r\n        {isSuccess && isSpecialShield && eventCard && showEventCard && (\r\n          <div className=\"event-card\">\r\n            <button \r\n              className=\"close-event\"\r\n              onClick={() => setShowEventCard(false)}\r\n              aria-label=\"Fermer\"\r\n            >\r\n              ×\r\n            </button>\r\n            <img \r\n              src={`http://127.0.0.1:8000${eventCard.imageUrl}`} \r\n              alt={eventCard.name} \r\n            />\r\n            <p>{eventCard.description}</p>\r\n          </div>\r\n        )}\r\n        <button\r\n          onClick={() => onAttackResult(isSuccess)}\r\n          className=\"confirm-btn\"\r\n        >\r\n          Continuer\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"attack-phase\">\r\n      {attackState === 'initial' && (\r\n        <div className=\"attack-prompt\">\r\n          <h3>Phase d'attaque</h3>\r\n          <p>Secteur sélectionné: {selectedSector + 1}</p>\r\n          <button onClick={handleAttack} className=\"attack-btn\">\r\n            Lancer le dé\r\n          </button>\r\n        </div>\r\n      )}\r\n      {attackState === 'rolling' && renderAttackResult()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttackPhase;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}